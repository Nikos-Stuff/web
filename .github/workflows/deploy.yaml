name: Deploy To SFTP

on:
  schedule:
    - cron: "0 */12 * * *"
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_NASA_API: ${{ secrets.NASA_API }}
          envkey_AZURE_API: ${{ secrets.AZURE_API }}

      - name: Build Astro Website
        run: pnpm build

      - name: Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.FTP_KEY }}
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USER: ${{ secrets.FTP_USER }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf "%s\n" "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$FTP_HOST" >> ~/.ssh/known_hosts
          rsync -azv --delete \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./dist/ $FTP_USER@$FTP_HOST:/pages/nikostuff.com/

      - name: Clear Cloudflare cache
        env:
          ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/purge_cache" \
            -H "Authorization: Bearer ${API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
